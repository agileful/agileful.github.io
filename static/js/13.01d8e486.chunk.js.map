{"version":3,"sources":["modules/dashboard/projects/services/project-service.js","modules/dashboard/projects/components/form-page/index.jsx"],"names":["create","project","a","async","request","method","url","data","serialize","response","console","error","Error","errors","detail","deserialize","edit","id","list","get","destroy","FormPage","history","useHistory","projectId","useParams","useState","setProject","name","setName","loading","setLoading","sprintDays","setSprintDays","errorMessage","setErrorMessage","setPageTitle","useContext","PageContext","useEffect","then","className","onSubmit","ev","preventDefault","message","push","htmlFor","value","onChange","e","target","parseInt","color","type","disabled","onClick","icon","faTrashAlt"],"mappings":"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","file":"static/js/13.01d8e486.chunk.js","sourcesContent":["import { request } from '../../../core/client'\nimport { serialize, deserialize } from 'jsonapi-fractal'\n\nexport async function create (project) {\n  let response\n\n  try {\n    response = await request({\n      method: 'POST',\n      url: '/dashboard/projects',\n      data: serialize(project, 'projects')\n    })\n  } catch (e) {\n    console.error(e)\n    throw new Error(e.response.data.errors[0].detail)\n  }\n\n  return deserialize(response.data)\n}\n\nexport async function edit (id, project) {\n  let response\n\n  try {\n    response = await request({\n      method: 'PATCH',\n      url: '/dashboard/projects/' + id,\n      data: serialize(project, 'projects')\n    })\n  } catch (e) {\n    throw new Error(e.response.data.errors[0].detail)\n  }\n\n  return deserialize(response.data)\n}\n\nexport async function list () {\n  const response = await request({\n    method: 'GET',\n    url: '/dashboard/projects'\n  })\n\n  return deserialize(response.data)\n}\n\nexport async function get (id) {\n  const response = await request({\n    method: 'GET',\n    url: '/dashboard/projects/' + id\n  })\n\n  return deserialize(response.data)\n}\n\nexport async function destroy (id) {\n  await request({\n    method: 'DELETE',\n    url: '/dashboard/projects/' + id\n  })\n\n  return true\n}\n","import React, { useState, useContext, useEffect } from 'react'\nimport LoadingContent from '../../../theme/components/loading-content'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { Button } from 'reactstrap'\nimport { create, get, edit, destroy } from '../../services/project-service'\nimport PageContext from '../../../theme/components/page/page-context'\n\nexport default function FormPage () {\n  const history = useHistory()\n\n  const { projectId } = useParams()\n  const [project, setProject] = useState(null)\n  const [name, setName] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [sprintDays, setSprintDays] = useState(14)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const { setPageTitle } = useContext(PageContext)\n\n  useEffect(() => {\n    setPageTitle(projectId ? 'Edit your project' : 'Create your project')\n  }, [projectId, setPageTitle])\n\n  useEffect(() => {\n    if (projectId) {\n      get(projectId).then((project) => {\n        setProject(project)\n        setName(project.name)\n        setSprintDays(project.sprintDays)\n      })\n    }\n  }, [projectId])\n\n  if (projectId && project === null) {\n    return <LoadingContent />\n  }\n\n  async function handleSubmit (ev) {\n    ev.preventDefault()\n    setLoading(true)\n\n    const data = project || {}\n    data.name = name\n    data.sprintDays = sprintDays\n\n    try {\n      if (projectId) {\n        await edit(projectId, data)\n      } else {\n        await create(data)\n      }\n    } catch (e) {\n      setErrorMessage(e.message)\n      return\n    } finally {\n      setLoading(false)\n    }\n\n    history.push('/dashboard')\n  }\n\n  async function handleRemove (ev) {\n    ev.preventDefault()\n    setLoading(true)\n\n    const data = project || {}\n    data.name = name\n\n    try {\n      await destroy(projectId)\n    } catch (e) {\n      setErrorMessage(e.message)\n      return\n    } finally {\n      setLoading(false)\n    }\n\n    history.push('/dashboard')\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Name</label>\n                <input id=\"text\" className=\"form-control\" value={name} onChange={e => setName(e.target.value)} />\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Sprint days</label>\n                <input id=\"number\" className=\"form-control\" value={sprintDays || ''} onChange={e => setSprintDays(parseInt(e.target.value))} />\n              </div>\n            </div>\n          </div>\n          {errorMessage && (\n            <div className=\"alert alert-danger\">\n              {errorMessage}\n            </div>\n          )}\n          <Button\n            className=\"btn-round\"\n            color=\"primary\"\n            type=\"submit\"\n            disabled={loading}>\n            { projectId ? 'Edit' : 'Create' }\n          </Button>\n          {projectId && (\n            <Button\n              className=\"btn-round\"\n              color=\"danger\"\n              type=\"button\"\n              onClick={handleRemove}\n              disabled={loading}>\n              <FontAwesomeIcon icon={faTrashAlt} />\n              &nbsp;\n              Remove\n            </Button>\n          )}\n        </form>\n      </div>\n    </div>\n  )\n}\n"],"sourceRoot":""}