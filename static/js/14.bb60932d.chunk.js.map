{"version":3,"sources":["modules/dashboard/projects/services/project-service.js","modules/dashboard/projects/components/selector-page/index.jsx"],"names":["create","project","a","async","request","method","url","data","serialize","response","console","error","Error","errors","detail","deserialize","edit","id","list","get","destroy","SelectorPage","useState","projects","setProjects","history","useHistory","setPageTitle","useContext","PageContext","useEffect","then","length","NoProjectWrapper","className","color","onClick","push","Fragment","map","key","SelectableCard","name","ProjectOptions","size","e","stopPropagation","icon","faEdit","styled","section","div"],"mappings":"sTAGO,SAAeA,EAAQC,GAAvB,eAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAIcE,YAAQ,CACvBC,OAAQ,OACRC,IAAK,sBACLC,KAAMC,YAAUP,EAAS,eAPxB,OAIHQ,EAJG,6DAUHC,QAAQC,MAAR,MACM,IAAIC,MAAM,KAAEH,SAASF,KAAKM,OAAO,GAAGC,QAXvC,iCAcEC,YAAYN,EAASF,OAdvB,wDAiBA,SAAeS,EAAMC,EAAIhB,GAAzB,eAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAIcE,YAAQ,CACvBC,OAAQ,QACRC,IAAK,uBAAyBW,EAC9BV,KAAMC,YAAUP,EAAS,eAPxB,OAIHQ,EAJG,4DAUG,IAAIG,MAAM,KAAEH,SAASF,KAAKM,OAAO,GAAGC,QAVvC,gCAaEC,YAAYN,EAASF,OAbvB,wDAgBA,SAAeW,IAAf,eAAAhB,EAAAC,OAAA,kEAAAD,EAAA,MACkBE,YAAQ,CAC7BC,OAAQ,MACRC,IAAK,yBAHF,cACCG,EADD,yBAMEM,YAAYN,EAASF,OANvB,qCASA,SAAeY,EAAKF,GAApB,eAAAf,EAAAC,OAAA,kEAAAD,EAAA,MACkBE,YAAQ,CAC7BC,OAAQ,MACRC,IAAK,uBAAyBW,KAH3B,cACCR,EADD,yBAMEM,YAAYN,EAASF,OANvB,qCASA,SAAea,EAASH,GAAxB,SAAAf,EAAAC,OAAA,kEAAAD,EAAA,MACCE,YAAQ,CACZC,OAAQ,SACRC,IAAK,uBAAyBW,KAH3B,iCAME,GANF,uC,2iBC5CQ,SAASI,IAAiB,IAAD,EACNC,mBAAS,MADH,mBAC/BC,EAD+B,KACrBC,EADqB,KAEhCC,EAAUC,cAShB,OANAC,EADyBC,qBAAWC,KAA5BF,cACK,uBAEbG,qBAAU,WACRZ,cAAOa,KAAKP,KACX,IAEc,OAAbD,EACK,kBAAC,IAAD,MAGe,IAApBA,EAASS,OAET,kBAACC,EAAD,2BACqB,6BACnB,kBAAC,IAAD,CACEC,UAAU,YACVC,MAAM,UACNC,QAAS,kBAAMX,EAAQY,KAAK,gCAH9B,8BAWJ,kBAAC,IAAMC,SAAP,KACE,yBAAKJ,UAAU,OACZX,EAASgB,KAAI,SAACtC,GACb,OACE,yBAAKiC,UAAU,6BAA6BM,IAAKvC,EAAQgB,IACvD,yBAAKiB,UAAU,mBACb,kBAACO,EAAD,CACEP,UAAU,YACVE,QAAS,kBAAMX,EAAQY,KAAR,8BAAoCpC,EAAQgB,OAC3D,yBAAKiB,UAAU,OACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,qCACb,uBAAGA,UAAU,wCAIjB,yBAAKA,UAAU,kBACZjC,EAAQyC,KACT,kBAACC,EAAD,KACE,kBAAC,IAAD,CACET,UAAU,YACVC,MAAM,UACNS,KAAK,KACLR,QAAS,SAACS,GACRpB,EAAQY,KAAR,8BAAoCpC,EAAQgB,GAA5C,UACA4B,EAAEC,oBAEJ,kBAAC,IAAD,CAAiBC,KAAMC,iBAY3C,kBAAC,IAAD,CACEd,UAAU,YACVC,MAAM,UACNC,QAAS,kBAAMX,EAAQY,KAAK,gCAH9B,yBAUN,IAAMJ,EAAmBgB,IAAOC,QAAV,KAMhBP,EAAiBM,IAAOE,IAAV,KAIdV,EAAiBQ,IAAOE,IAAV","file":"static/js/14.bb60932d.chunk.js","sourcesContent":["import { request } from '../../../core/client'\nimport { serialize, deserialize } from 'jsonapi-fractal'\n\nexport async function create (project) {\n  let response\n\n  try {\n    response = await request({\n      method: 'POST',\n      url: '/dashboard/projects',\n      data: serialize(project, 'projects')\n    })\n  } catch (e) {\n    console.error(e)\n    throw new Error(e.response.data.errors[0].detail)\n  }\n\n  return deserialize(response.data)\n}\n\nexport async function edit (id, project) {\n  let response\n\n  try {\n    response = await request({\n      method: 'PATCH',\n      url: '/dashboard/projects/' + id,\n      data: serialize(project, 'projects')\n    })\n  } catch (e) {\n    throw new Error(e.response.data.errors[0].detail)\n  }\n\n  return deserialize(response.data)\n}\n\nexport async function list () {\n  const response = await request({\n    method: 'GET',\n    url: '/dashboard/projects'\n  })\n\n  return deserialize(response.data)\n}\n\nexport async function get (id) {\n  const response = await request({\n    method: 'GET',\n    url: '/dashboard/projects/' + id\n  })\n\n  return deserialize(response.data)\n}\n\nexport async function destroy (id) {\n  await request({\n    method: 'DELETE',\n    url: '/dashboard/projects/' + id\n  })\n\n  return true\n}\n","import React, { useState, useContext, useEffect } from 'react'\nimport { Button } from 'reactstrap'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport LoadingContent from '../../../theme/components/loading-content'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit } from '@fortawesome/free-solid-svg-icons'\nimport { list } from '../../services/project-service'\nimport PageContext from '../../../theme/components/page/page-context'\n\nexport default function SelectorPage () {\n  const [projects, setProjects] = useState(null)\n  const history = useHistory()\n\n  const { setPageTitle } = useContext(PageContext)\n  setPageTitle('Select your project')\n\n  useEffect(() => {\n    list().then(setProjects)\n  }, [])\n\n  if (projects === null) {\n    return <LoadingContent />\n  }\n\n  if (projects.length === 0) {\n    return (\n      <NoProjectWrapper>\n        There is no project<br />\n        <Button\n          className=\"btn-round\"\n          color=\"primary\"\n          onClick={() => history.push('/dashboard/projects/create')}>\n          Create your first project\n        </Button>\n      </NoProjectWrapper>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"row\">\n        {projects.map((project) => {\n          return (\n            <div className=\"col-sm-6 col-md-6 col-lg-3\" key={project.id}>\n              <div className=\"card-stats card\">\n                <SelectableCard\n                  className=\"card-body\"\n                  onClick={() => history.push(`/dashboard/projects/${project.id}`)}>\n                  <div className=\"row\">\n                    <div className=\"col-5 col-md-4\">\n                      <div className=\"icon-big text-center icon-warning\">\n                        <i className=\"nc-icon nc-layout-11 text-warning\">\n                        </i>\n                      </div>\n                    </div>\n                    <div className=\"col-7 col-md-8\">\n                      {project.name}\n                      <ProjectOptions>\n                        <Button\n                          className=\"btn-round\"\n                          color=\"warning\"\n                          size=\"sm\"\n                          onClick={(e) => {\n                            history.push(`/dashboard/projects/${project.id}/edit`)\n                            e.stopPropagation()\n                          }}>\n                          <FontAwesomeIcon icon={faEdit} />\n\n                        </Button>\n                      </ProjectOptions>\n                    </div>\n                  </div>\n                </SelectableCard>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n      <Button\n        className=\"btn-round\"\n        color=\"primary\"\n        onClick={() => history.push('/dashboard/projects/create')}>\n        Create a new project\n      </Button>\n    </React.Fragment>\n  )\n}\n\nconst NoProjectWrapper = styled.section`\n  text-align: center;\n  line-height: 3em;\n  margin-top: 3em;\n`\n\nconst ProjectOptions = styled.div`\n  text-align: right;\n`\n\nconst SelectableCard = styled.div`\n  &:hover {\n    background-color: #eee;\n    cursor: pointer;\n  }\n`\n"],"sourceRoot":""}