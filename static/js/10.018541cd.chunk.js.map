{"version":3,"sources":["modules/home/components/page-cover/index.jsx","modules/core/services/user-service.js","modules/home/components/reset-password-page/index.jsx"],"names":["PageCover","props","className","title","forgetMyPassword","email","a","async","request","method","url","data","Error","response","errors","detail","resetPassword","token","password","LoginPage","useParams","useState","setPassword","passwordConfirm","setPasswordConfirm","loading","setLoading","errorMessage","setErrorMessage","successMessage","setSuccessMessage","Fragment","class","onSubmit","ev","preventDefault","message","type","value","onChange","e","target","disabled"],"mappings":"uGAAA,sDAEe,SAASA,EAAWC,GACjC,OACE,6BAASC,UAAU,sBACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,uDACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,0BACb,wBAAIA,UAAU,wCAAwCD,EAAME,c,kICPnE,SAAeC,EAAkBC,GAAjC,SAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAEGE,YAAQ,CACZC,OAAQ,OACRC,IAAK,4BACLC,KAAM,CAAEN,YALP,iCAQI,GARJ,sCAUG,IAAIO,MAAM,KAAEC,SAASF,KAAKG,OAAO,GAAGC,QAVvC,uDAcA,SAAeC,EAAeC,EAAOC,GAArC,SAAAZ,EAAAC,OAAA,2EAAAD,EAAA,MAEGE,YAAQ,CACZC,OAAQ,OACRC,IAAK,yBAA2BO,EAChCN,KAAM,CAAEO,eALP,iCAQI,GARJ,sCAUG,IAAIN,MAAM,KAAEC,SAASF,KAAKG,OAAO,GAAGC,QAVvC,yD,uJCXQ,SAASI,IAAc,IAC5BF,EAAUG,cAAVH,MAD2B,EAEHI,mBAAS,IAFN,mBAE5BH,EAF4B,KAElBI,EAFkB,OAGWD,mBAAS,IAHpB,mBAG5BE,EAH4B,KAGXC,EAHW,OAILH,oBAAS,GAJJ,mBAI5BI,EAJ4B,KAInBC,EAJmB,OAKKL,mBAAS,MALd,mBAK5BM,EAL4B,KAKdC,EALc,OAMSP,mBAAS,MANlB,mBAM5BQ,EAN4B,KAMZC,EANY,KA4BnC,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CAAW5B,MAAM,mBAEjB,6BAASD,UAAU,wBACjB,yBAAKA,UAAU,aACb,wBAAIA,UAAU,QAAd,kBACC2B,EACC,yBAAKG,MAAM,uBACRH,GAGH,0BAAMI,SAhChB,SAA6BC,GAA7B,SAAA5B,EAAAC,OAAA,mDACE2B,EAAGC,iBACHT,GAAW,GACXE,EAAgB,MAEZV,IAAaK,EALnB,uBAMIK,EAAgB,iCANpB,qDAAAtB,EAAA,MAWUU,YAAcC,EAAOC,IAX/B,OAYIY,EAAkB,iCAZtB,kDAcIF,EAAgB,KAAEQ,SAdtB,yBAgBIV,GAAW,GAhBf,8EAiCY,yBAAKxB,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACb,2CACA,2BAAOA,UAAU,eAAemC,KAAK,WAAWC,MAAOpB,EAAUqB,SAAU,SAAAC,GAAC,OAAIlB,EAAYkB,EAAEC,OAAOH,WAEvG,yBAAKpC,UAAU,cACb,mDACA,2BAAOA,UAAU,eAAemC,KAAK,WAAWC,MAAOf,EAAiBgB,SAAU,SAAAC,GAAC,OAAIhB,EAAmBgB,EAAEC,OAAOH,WAEpHX,GACC,yBAAKzB,UAAU,sBACZyB,GAGL,yBAAKzB,UAAU,cACb,2BAAOA,UAAU,kBAAkBmC,KAAK,SAASC,MAAOb,EAAU,OAAS,UAAWiB,SAAUjB","file":"static/js/10.018541cd.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function PageCover (props) {\n  return (\n    <section className=\"probootstrap-cover\">\n      <div className=\"container\">\n        <div className=\"row probootstrap-vh-75 align-items-center text-left\">\n          <div className=\"col-sm\">\n            <div className=\"probootstrap-text pt-5\">\n              <h1 className=\"probootstrap-heading text-white mb-4\">{props.title}</h1>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n","import { request } from '../client'\n\nexport async function forgetMyPassword (email) {\n  try {\n    await request({\n      method: 'POST',\n      url: '/users/forget-my-password',\n      data: { email }\n    })\n\n    return true\n  } catch (e) {\n    throw new Error(e.response.data.errors[0].detail)\n  }\n}\n\nexport async function resetPassword (token, password) {\n  try {\n    await request({\n      method: 'POST',\n      url: '/users/reset-password/' + token,\n      data: { password }\n    })\n\n    return true\n  } catch (e) {\n    throw new Error(e.response.data.errors[0].detail)\n  }\n}\n","import React, { useState } from 'react'\nimport PageCover from '../page-cover'\nimport { resetPassword } from '../../../core/services/user-service'\nimport { useParams } from 'react-router-dom'\n\nexport default function LoginPage () {\n  const { token } = useParams()\n  const [password, setPassword] = useState('')\n  const [passwordConfirm, setPasswordConfirm] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [successMessage, setSuccessMessage] = useState(null)\n\n  async function handleSubmit (ev) {\n    ev.preventDefault()\n    setLoading(true)\n    setErrorMessage(null)\n\n    if (password !== passwordConfirm) {\n      setErrorMessage('Password confirm is not equal')\n      return\n    }\n\n    try {\n      await resetPassword(token, password)\n      setSuccessMessage('Password changed with success')\n    } catch (e) {\n      setErrorMessage(e.message)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <PageCover title=\"Reset password\" />\n\n      <section className=\"probootstrap-section\">\n        <div className=\"container\">\n          <h2 className=\"mb-5\">Reset password</h2>\n          {successMessage ? (\n            <div class=\"alert alert-success\">\n              {successMessage}\n            </div>\n          ) : (\n            <form onSubmit={handleSubmit}>\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <div className=\"form-group\">\n                    <label>Password</label>\n                    <input className=\"form-control\" type=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Password Confirm</label>\n                    <input className=\"form-control\" type=\"password\" value={passwordConfirm} onChange={e => setPasswordConfirm(e.target.value)} />\n                  </div>\n                  {errorMessage &&\n                    <div className=\"alert alert-danger\">\n                      {errorMessage}\n                    </div>\n                  }\n                  <div className=\"form-group\">\n                    <input className=\"btn btn-primary\" type=\"submit\" value={loading ? 'Wait' : 'Confirm'} disabled={loading} />\n                  </div>\n                </div>\n              </div>\n            </form>\n          )}\n        </div>\n      </section>\n    </React.Fragment>\n  )\n}\n"],"sourceRoot":""}