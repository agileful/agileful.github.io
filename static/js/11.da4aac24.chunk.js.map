{"version":3,"sources":["modules/dashboard/sprints/services/sprint-service.js","modules/dashboard/projects/services/project-service.js","modules/dashboard/theme/components/date-picker/index.jsx","modules/dashboard/sprints/components/sprint-form-page/index.jsx"],"names":["current","projectId","get","id","a","async","request","method","url","response","deserialize","data","status","list","options","queryString","sort","page","append","serializeQueryString","create","sprint","serialize","Error","errors","detail","edit","destroy","project","console","error","CustomDatePicker","props","selected","onChange","className","Container","styled","div","SprintFormPage","useProjectId","history","useHistory","sprintId","useParams","useState","booting","setBooting","loading","setLoading","setSprint","Date","fromDate","setFromDate","days","setDays","errorMessage","setErrorMessage","setPageTitle","useContext","PageContext","useEffect","parseISO","getProject","sprintDays","differenceInDays","toDate","boot","addDays","onSubmit","ev","preventDefault","format","newSprint","message","push","date","value","e","parseInt","target","type","disabled","Button","color","onClick","icon","faTrashAlt"],"mappings":"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","file":"static/js/11.da4aac24.chunk.js","sourcesContent":["import { request, serializeQueryString } from '../../../core/client'\nimport { serialize, deserialize } from 'jsonapi-fractal'\n\nexport function current (projectId) {\n  return get(projectId, 'current')\n}\n\nexport async function get (projectId, id) {\n  try {\n    const response = await request({\n      method: 'GET',\n      url: `/dashboard/projects/${projectId}/sprints/${id}`\n    })\n\n    return deserialize(response.data)\n  } catch (e) {\n    if (e.response && e.response.status === 404) {\n      return null\n    }\n\n    throw e\n  }\n}\n\nexport async function list (projectId, options) {\n  const queryString = {}\n\n  if (options.sort) {\n    queryString.sort = options.sort\n  }\n\n  if (options.page) {\n    queryString.page = options.page\n  }\n\n  const append = queryString ? ('?' + serializeQueryString(queryString)) : ''\n\n  const response = await request({\n    method: 'GET',\n    url: `/dashboard/projects/${projectId}/sprints` + append\n  })\n\n  return deserialize(response.data)\n}\n\nexport async function create (projectId, sprint) {\n  let response\n\n  try {\n    response = await request({\n      method: 'POST',\n      url: `/dashboard/projects/${projectId}/sprints`,\n      data: serialize(sprint, 'sprints')\n    })\n  } catch (e) {\n    throw new Error(e.response.data.errors[0].detail)\n  }\n\n  return deserialize(response.data)\n}\n\nexport async function edit (projectId, id, sprint) {\n  let response\n\n  try {\n    response = await request({\n      method: 'PATCH',\n      url: `/dashboard/projects/${projectId}/sprints/${id}`,\n      data: serialize(sprint, 'sprints')\n    })\n  } catch (e) {\n    throw new Error(e.response.data.errors[0].detail)\n  }\n\n  return deserialize(response.data)\n}\n\nexport async function destroy (projectId, id) {\n  await request({\n    method: 'DELETE',\n    url: `/dashboard/projects/${projectId}/sprints/${id}`\n  })\n\n  return true\n}\n","import { request } from '../../../core/client'\nimport { serialize, deserialize } from 'jsonapi-fractal'\n\nexport async function create (project) {\n  let response\n\n  try {\n    response = await request({\n      method: 'POST',\n      url: '/dashboard/projects',\n      data: serialize(project, 'projects')\n    })\n  } catch (e) {\n    console.error(e)\n    throw new Error(e.response.data.errors[0].detail)\n  }\n\n  return deserialize(response.data)\n}\n\nexport async function edit (id, project) {\n  let response\n\n  try {\n    response = await request({\n      method: 'PATCH',\n      url: '/dashboard/projects/' + id,\n      data: serialize(project, 'projects')\n    })\n  } catch (e) {\n    throw new Error(e.response.data.errors[0].detail)\n  }\n\n  return deserialize(response.data)\n}\n\nexport async function list () {\n  const response = await request({\n    method: 'GET',\n    url: '/dashboard/projects'\n  })\n\n  return deserialize(response.data)\n}\n\nexport async function get (id) {\n  const response = await request({\n    method: 'GET',\n    url: '/dashboard/projects/' + id\n  })\n\n  return deserialize(response.data)\n}\n\nexport async function destroy (id) {\n  await request({\n    method: 'DELETE',\n    url: '/dashboard/projects/' + id\n  })\n\n  return true\n}\n","import React from 'react'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport styled from 'styled-components'\n\nexport default function CustomDatePicker (props) {\n  const { selected, onChange, className } = props\n\n  return (\n    <Container>\n      <DatePicker className={className} selected={selected} onChange={onChange} />\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  .form-control {\n    display: block;\n  }\n\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker-wrapper {\n    display: block;\n  }\n`\n","import React, { useState, useContext, useEffect } from 'react'\nimport LoadingContent from '../../../theme/components/loading-content'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { Button } from 'reactstrap'\nimport { useProjectId } from '../../../projects/hooks'\nimport { get as getProject } from '../../../projects/services/project-service'\nimport { get, create, edit, destroy } from '../../services/sprint-service'\nimport DatePicker from '../../../theme/components/date-picker'\nimport { addDays, format, parseISO, differenceInDays } from 'date-fns'\nimport PageContext from '../../../theme/components/page/page-context'\n\nexport default function SprintFormPage () {\n  const projectId = useProjectId()\n  const history = useHistory()\n  const { sprintId } = useParams()\n  const [booting, setBooting] = useState(true)\n  const [loading, setLoading] = useState(false)\n  const [sprint, setSprint] = useState(null)\n  const [fromDate, setFromDate] = useState(new Date())\n  const [days, setDays] = useState(14)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const { setPageTitle } = useContext(PageContext)\n\n  useEffect(() => {\n    async function boot () {\n      let sprint = null\n\n      if (sprintId) {\n        sprint = await get(projectId, sprintId)\n        setSprint(sprint)\n        setFromDate(parseISO(sprint.fromDate))\n      }\n\n      const project = await getProject(projectId)\n\n      if (project.sprintDays) {\n        setDays(project.sprintDays)\n      }\n\n      if (sprint) {\n        setDays(differenceInDays(parseISO(sprint.toDate), parseISO(sprint.fromDate)) + 1)\n      }\n\n      setBooting(false)\n    }\n\n    boot()\n  }, [projectId, sprintId])\n\n  if (booting) {\n    return <LoadingContent />\n  }\n\n  if (sprintId) {\n    setPageTitle('Edit sprint')\n  } else {\n    setPageTitle('Create sprint')\n  }\n\n  const toDate = (fromDate && days) ? addDays(fromDate, days - 1) : null\n\n  async function handleSubmit (ev) {\n    let newSprint\n    ev.preventDefault()\n    setLoading(true)\n\n    const data = sprint || {}\n    data.fromDate = fromDate ? format(fromDate, 'yyyy-MM-dd') : null\n    data.toDate = toDate ? format(toDate, 'yyyy-MM-dd') : null\n\n    try {\n      if (sprintId) {\n        newSprint = await edit(projectId, sprintId, data)\n      } else {\n        newSprint = await create(projectId, data)\n      }\n    } catch (e) {\n      setErrorMessage(e.message)\n      return\n    } finally {\n      setLoading(false)\n    }\n\n    history.push(`/dashboard/projects/${projectId}/sprints/${newSprint.id}`)\n  }\n\n  async function handleRemove (ev) {\n    ev.preventDefault()\n    setLoading(true)\n\n    try {\n      await destroy(projectId, sprint.id)\n    } catch (e) {\n      setErrorMessage(e.message)\n      return\n    } finally {\n      setLoading(false)\n    }\n\n    history.push(`/dashboard/projects/${projectId}/sprints/current`)\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <div className=\"form-group\">\n                <label>From date</label>\n                <DatePicker selected={fromDate} className=\"form-control\" onChange={date => setFromDate(date)} />\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"form-group\">\n                <label>Days</label>\n                <input id=\"number\" className=\"form-control\" value={days || ''} onChange={e => setDays(parseInt(e.target.value) || null)} />\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"form-group\">\n                <label>To date</label>\n                <input type=\"text\" className=\"form-control\" value={toDate ? format(toDate, 'MM/dd/yyyy') : ''} disabled />\n              </div>\n            </div>\n          </div>\n          {errorMessage && (\n            <div className=\"alert alert-danger\">\n              {errorMessage}\n            </div>\n          )}\n          <Button\n            className=\"btn-round\"\n            color=\"primary\"\n            type=\"submit\"\n            disabled={loading}>\n            { sprintId ? 'Edit' : 'Create' }\n          </Button>\n          {sprintId && (\n            <Button\n              className=\"btn-round\"\n              color=\"danger\"\n              type=\"button\"\n              onClick={handleRemove}\n              disabled={loading}>\n              <FontAwesomeIcon icon={faTrashAlt} />\n              &nbsp;\n              Remove\n            </Button>\n          )}\n        </form>\n      </div>\n    </div>\n  )\n}\n"],"sourceRoot":""}